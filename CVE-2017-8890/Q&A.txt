
idhyt3r <idhyt3r@gmail.com> asked me some questions about this exploit.
The questions are as follows:
> Thanks your 8890 exp in GitHub
> https://github.com/hardenedlinux/offensive_poc/tree/master/CVE-2017-8890
>
> I read it and modify to adapt to my nexus6p，I could control eip to jump to
> jop, but the code stream in rcuc/0 thread.
>
It's awesome... where could I buy a nexus6p with x86 :p
>
> the test crash msg:
>
>     [ 9489.655613] ---[ end trace 4ff98842c380dbcb ]---
>
>     [ 9489.671671] Bad mode in Synchronous Abort handler detected, code
> 0x8600000e
>
>     [ 9489.671707] CPU: 0 PID: 8 Comm: rcuc/0 Tainted: G        W   
> 3.10.73-g5b0be8f02fe #1
>
>     [ 9489.671716] task: ffffffc00e9a4b40 ti: ffffffc00e9dc000 task.ti:
> ffffffc00e9dc000
>
>     [ 9489.671728] PC is at 0xffffffc040404040
>
>     [ 9489.671751] LR is at kernel_sock_ioctl+0x2c/0x3c
>
>     [ 9489.671758] pc : [<ffffffc040404040>] lr : [<ffffffc000afe0a0>]
> pstate: a0000145
>
>     [ 9489.671764] sp : ffffffc00e9dfcc0
>
>     [ 9489.671770] x29: ffffffc00e9dfcc0 x28: 000000000000042a
>
>     [ 9489.671786] x27: ffffffc000ce5000 x26: ffffffc04b15eb00
>
>     [ 9489.671798] x25: ffffffc03195e3c8 x24: ffffffc00e9dc000
>
>     [ 9489.671809] x23: ffffffc00177f618 x22: 0000000000000422
>
>     [ 9489.671820] x21: ffffffc00160fba8 x20: ffffffffffffffff
>
>     [ 9489.671832] x19: ffffffc00e9dc000 x18: 000000000000003d
>
>     [ 9489.671843] x17: 0000000000000001 x16: 0000000000000001
>
>     [ 9489.671855] x15: 0000000000000000 x14: 0ffffffffffffffe
>
>     [ 9489.671867] x13: 0000000000000030 x12: 0101010101010101
>
>     [ 9489.671879] x11: 7f7f7f7f7f7f7f7f x10: feff676273687672
>
>     [ 9489.671891] x9 : 0000000000000040 x8 : ffffffc0c531be00
>
>     [ 9489.671903] x7 : 00000000000002a2 x6 : 0000000000000004
>
>     [ 9489.671915] x5 : 0000000000000000 x4 : 0000000000000001
>
>     [ 9489.671927] x3 : ffffffc040404040 x2 : ffffffc000afe074
>
>     [ 9489.671939] x1 : ffffffc00e9dc000 x0 : 000000000c00011f
>
>     …
>
> I could control eip now...
>
>
>    the test jop crash:
>
>  [ 7789.278521] Unable to handle kernel paging request at virtual address
> 0c00011f
>
>     [ 7789.278556] pgd = ffffffc00007d000
>
>     [ 7789.278562] [0c00011f] *pgd=000000000e90b003, *pmd=0000000055fd6003,
> *pte=0000000000000000
>
>     [ 7789.278593] Internal error: Oops: 96000006 [#1] PREEMPT SMP
>
>     [ 7789.278613] CPU: 0 PID: 8 Comm: rcuc/0 Tainted: G        W   
> 3.10.73-g5b0be8f02fe #1
>
>     [ 7789.278622] task: ffffffc00e9a4b40 ti: ffffffc00e9dc000 task.ti:
> ffffffc00e9dc000
>
>     [ 7789.278653] PC is at rcu_do_batch.isra.35+0xf8/0x2b4
>
>     [ 7789.278661] LR is at rcu_do_batch.isra.35+0x150/0x2b4
>
>     [ 7789.278668] pc : [<ffffffc000299a98>] lr : [<ffffffc000299af0>]
> pstate: 60000145
>
>     [ 7789.278674] sp : ffffffc00e9dfce0
>
>     [ 7789.278680] x29: ffffffc00e9dfce0 x28: 0000000000000a42
>
>     [ 7789.278692] x27: ffffffc000ce5000 x26: 000000000c00011f
>
>     [ 7789.278704] x25: ffffffc01b723a08 x24: ffffffc00e9dc000
>
>     [ 7789.278716] x23: ffffffc00177f618 x22: 0000000000000a30
>
>     [ 7789.278728] x21: ffffffc00160fba8 x20: ffffffc0c118cbd8
>
>     [ 7789.278740] x19: ffffffc0c118cbb0 x18: 0000000000000000
>
>     [ 7789.278752] x17: 0000007be8b01930 x16: ffffffc0003087c4
>
>     [ 7789.278763] x15: 00000000004e71d8 x14: 0ffffffffffffffe
>
>     [ 7789.278775] x13: 0000000000000030 x12: 0101010101010101
>
>     [ 7789.278787] x11: 7f7f7f7f7f7f7f7f x10: feff676273687672
>
>     [ 7789.278799] x9 : 0000000000000040 x8 : ffffffc0c531be00
>
>     [ 7789.278810] x7 : 00000000000001b6 x6 : 0000000000000004
>
>     [ 7789.278822] x5 : 0000000000000000 x4 : 0000000000000001
>
>     [ 7789.278834] x3 : 0000000000000201 x2 : ffffffc00e9a4b40
>
>     [ 7789.278847] x1 : ffffffc00e9dc000 x0 : 000000000c00011f
>
>
> you see,  The false reason is : Unable to handle kernel paging request at
> virtual address 0c00011f
>
>
> the virtual address 0c00011f mmap in my thread, but control code stream in
> rcuc/0 thread, so i could not exploit.
>

rcuc/0 is a kernel thread, whose it's address space ( mm == NULL or active_mm ) is different from your exploit process...
So, How could we exploit it? 
I'm sure that it exist a way to exploit it. :p
I made it trusting you can make it.

Jeremy~

>
> Can you give some suggest for the exp?
>
>
> Looking forward to your reply！
>
>
